DROP PROCEDURE IF EXISTS verifyUserPassword;
DROP PROCEDURE IF EXISTS verifyEmployeeSalary;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS EMPLOYEE;
DROP TABLE IF EXISTS CERTIFICATE;
DROP TABLE IF EXISTS SCORE;
CREATE TABLE USERS (userid int NOT NULL GENERATED BY DEFAULT AS IDENTITY, username varchar(50), password varchar(50),PRIMARY KEY (userid));
CREATE TABLE SCORE (userid int NOT NULL GENERATED BY DEFAULT AS IDENTITY, nick varchar(50), score INTEGER,PRIMARY KEY (userid));
-- CREATE PROCEDURE verifyUserPassword(IN username_ varchar(50), IN password_ varchar(50)) READS SQL DATA DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE resultSet SCROLL CURSOR WITH HOLD WITH RETURN FOR SELECT * FROM USERS WHERE USERNAME = username_ AND PASSWORD = password_; OPEN resultSet;END;
create table EMPLOYEE (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY, first_name VARCHAR(20) default NULL,   last_name  VARCHAR(20) default NULL, salary     INT  default NULL, PRIMARY KEY (id));
create table CERTIFICATE (id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY, certificate_name VARCHAR(30) default NULL, employee_id INT default NULL, PRIMARY KEY (id));
-- CREATE PROCEDURE verifyEmployeeSalary(IN user_ varchar(50)) READS SQL DATA DYNAMIC RESULT SETS 1 BEGIN ATOMIC DECLARE resultSet SCROLL CURSOR WITH RETURN FOR SELECT * FROM EMPLOYEE WHERE FIRST_NAME = user_; OPEN resultSet;END;
